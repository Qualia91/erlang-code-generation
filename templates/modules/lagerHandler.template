<HEADER>Lager Handler built from template
-behaviour(gen_event).

<SECTION_COMMENT>Export and Defs

-define(SERVER, ?MODULE).

%% Websocket Callbacks
-export([
    init/1,
    handle_call/2,
    handle_event/2,
    handle_info/2,
    terminate/2,
    code_change/3
]).

%% Loop state
-record(state, {
    level :: integer()
}).
-type state() :: state.

<SECTION_COMMENT>Lager Handler Callbacks

init([Level, _RetryTimes, _RetryInterval, _Token]) ->
    State = #state{
        level = lager_util:level_to_num(Level)
    },
    {ok, State}.

handle_call(get_loglevel, #state{level = Level} = State) ->
    {ok, Level, State};
handle_call({set_loglevel, Level}, State) ->
    {ok, ok, State#state{ level = lager_util:level_to_num(Level) }};
handle_call(_Request, State) ->
    {ok, ok, State}.

handle_event({log, _Message}, _State) ->
    ok;
handle_event(_Event, State) ->
    {ok, State}.

handle_info(_Info, State) ->
    {ok, State}.

terminate(_Reason, _State) ->
    ok.

code_change(_OldVsn, State, _Extra) ->
    {ok, State}.

<SECTION_COMMENT>Internal functions

<EUNIT_TESTS>